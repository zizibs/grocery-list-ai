name: Security Scan

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays at midnight

permissions:
  contents: read
  pull-requests: write

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
      ADMIN_PASSWORD_HASH: ${{ secrets.ADMIN_PASSWORD_HASH }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          npm ci
        
      - name: Create environment files
        run: |
          # Create .env.local
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" > .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.local
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.local
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> .env.local
          
          # Create .env.production
          cp .env.local .env.production
          
          # Create .env file (used during the build process)
          cp .env.local .env
          
          # Create .env.development
          cp .env.local .env.development
          
          # Print contents for debugging
          echo "Environment files created:"
          ls -la .env*
          
          echo "Contents of .env file:"
          cat .env
          
      - name: Run npm audit
        id: audit
        run: |
          # Run audit but don't fail the workflow
          npm audit || echo "Audit completed with findings"
          
      - name: Comment PR with security results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            
            const securityMessage = `## Security Scan Results
            
            âœ… Security scan completed. Please review the audit results in the workflow logs.
            
            > Note: This is a simplified security check. For production, consider implementing stricter security measures.`;
            
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: securityMessage
            }); 